{"version":3,"sources":["components/text/Title.js","components/map/map.options.js","components/map/Map.js","pages/Contact.js"],"names":["Title","children","classes","useStyles","variant","component","color","className","root","paragraph","avgTypingDelay","makeStyles","fontWeight","userSelect","center","L","LatLng","TILE_LAYER","MAP_OPTIONS","zoom","minZoom","maxZoom","maxBoundsViscosity","Map","MapContainer","scrollWheelZoom","map","TileLayer","attribution","url","Marker","position","ref","leafletElement","openPopup","Popup","closeButton","height","width","popup","minWidth","initialValues","name","email","subject","message","contactSchema","Yup","shape","min","max","required","Contact","handleSubmit","values","a","Promise","resolve","setTimeout","alert","JSON","stringify","Grid","container","spacing","item","md","i18n","_","Typography","onSubmit","validationSchema","errors","touched","handleChange","handleBlur","isSubmitting","TextField","fullWidth","id","label","onBlur","onChange","value","error","multiline","rows","justify","Button","disabled"],"mappings":"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","file":"static/js/contact.6b963d7f.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typist from \"react-typist\";\n\nexport default function Title({ children }) {\n  const classes = useStyles();\n  return (\n    <Typography\n      variant=\"h3\"\n      component=\"h1\"\n      color=\"primary\"\n      className={classes.root}\n      paragraph\n    >\n      <Typist avgTypingDelay={120}>{children}</Typist>\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    fontWeight: 900,\n    userSelect: \"none\",\n  },\n}));\n","import L from \"leaflet\";\nconst token =\n  \"pk.eyJ1IjoiYW5kcmVzOTYxOSIsImEiOiJjanExdTFodjMwYXQyNDNuMmVvazV6eHBlIn0.kOpHKEx5EBGD8YIXmKRQWA\";\nconst center = new L.LatLng(3.399992, -76.516708);\nconst TILE_LAYER = `https://api.mapbox.com/styles/v1/andres9619/ckhjmykyt17vf19mx0tn74dzg/tiles/256/{z}/{x}/{y}@2x?access_token=${token}`;\nconst VISCOSITY = 0.5;\nconst MAX_ZOOM_MAP = 18;\nconst INITIAL_ZOOM = 4;\nconst MAP_OPTIONS = {\n  center,\n  zoom: INITIAL_ZOOM,\n  minZoom: INITIAL_ZOOM,\n  maxZoom: MAX_ZOOM_MAP,\n  maxBoundsViscosity: VISCOSITY,\n};\nexport { TILE_LAYER };\nexport default MAP_OPTIONS;\n","import React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport MAP_OPTIONS, { TILE_LAYER } from \"./map.options\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function Map() {\n  const myPosition = [3.399995, -76.517272];\n  const classes = useStyles();\n\n  const initMarker = (ref) => {\n    if (ref && ref.leafletElement) {\n      ref.leafletElement.openPopup();\n    }\n  };\n  return (\n    <MapContainer\n      scrollWheelZoom={false}\n      className={classes.map}\n      {...MAP_OPTIONS}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url={TILE_LAYER}\n      />\n      <Marker position={myPosition} ref={initMarker}>\n        <Popup closeButton>{\"I'm here\"}</Popup>\n      </Marker>\n    </MapContainer>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  map: { height: \"80vh\", width: \"100%\" },\n  popup: { minWidth: 300 },\n}));\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Map from \"../components/map/Map\";\nimport Title from \"../components/text/Title\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Formik } from \"formik\";\nimport { i18n } from \"@lingui/core\";\nimport * as Yup from \"yup\";\n\nconst initialValues = { name: \"\", email: \"\", subject: \"\", message: \"\" };\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  subject: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  message: Yup.string().min(2, \"Too Short!\").required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n});\n\nexport default function Contact() {\n  const classes = useStyles();\n\n  const handleSubmit = async (values) => {\n    await new Promise((resolve) => setTimeout(resolve, 500));\n    alert(JSON.stringify(values, null, 2));\n  };\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid container item md={5}>\n        <Title>{i18n._(\"contactTitle\")}</Title>\n        <Typography variant=\"h6\" component=\"p\" paragraph>\n          I am interested in freelance opportunities – especially ambitious or\n          large projects. However, if you have other request or question, don’t\n          hesitate to contact me using below form either.\n        </Typography>\n        <Formik\n          onSubmit={handleSubmit}\n          initialValues={initialValues}\n          validationSchema={contactSchema}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting,\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item md={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"Name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.name}\n                    error={!!touched.name && !!errors.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.email}\n                    error={!!touched.email && !!errors.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"subject\"\n                    label=\"Subject\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.subject}\n                    error={!!touched.subject && !!errors.subject}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    multiline\n                    rows={6}\n                    id=\"message\"\n                    label=\"Message\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.message}\n                    error={!!touched.message && !!errors.message}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={12} container justify=\"flex-end\">\n                  <Button\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    disabled={isSubmitting}\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </Grid>\n      <Grid item md={7}>\n        <div classes={classes.root}>\n          <Map />\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  root: { height: \"100%\", width: \"100%\" },\n}));\n"],"sourceRoot":""}